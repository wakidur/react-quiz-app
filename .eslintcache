[{"/Users/wakidurrahman/react-quiz-app/src/index.js":"1","/Users/wakidurrahman/react-quiz-app/src/App.js":"2","/Users/wakidurrahman/react-quiz-app/src/reportWebVitals.js":"3","/Users/wakidurrahman/react-quiz-app/src/pages/Questions.jsx":"4","/Users/wakidurrahman/react-quiz-app/src/pages/Answers.jsx":"5","/Users/wakidurrahman/react-quiz-app/src/components/Routes/PrivateAdminUserRoute.jsx":"6","/Users/wakidurrahman/react-quiz-app/src/components/Routes/PrivateUserRoute.jsx":"7","/Users/wakidurrahman/react-quiz-app/src/components/Spinner/Spinner.jsx":"8","/Users/wakidurrahman/react-quiz-app/src/pages/LogIn.jsx":"9","/Users/wakidurrahman/react-quiz-app/src/pages/Quiz.jsx":"10","/Users/wakidurrahman/react-quiz-app/src/components/Layouts/Layout.jsx":"11","/Users/wakidurrahman/react-quiz-app/src/components/Layouts/Header.jsx":"12","/Users/wakidurrahman/react-quiz-app/src/utilities/userAction.js":"13","/Users/wakidurrahman/react-quiz-app/src/utilities/dataStore.js":"14","/Users/wakidurrahman/react-quiz-app/src/utilities/localStorage.js":"15","/Users/wakidurrahman/react-quiz-app/src/components/Message/AlertMessage.jsx":"16"},{"size":781,"mtime":1610526733173,"results":"17","hashOfConfig":"18"},{"size":1147,"mtime":1610455696282,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610437061466,"results":"20","hashOfConfig":"18"},{"size":3540,"mtime":1610567569439,"results":"21","hashOfConfig":"18"},{"size":7032,"mtime":1610577133654,"results":"22","hashOfConfig":"18"},{"size":631,"mtime":1610517780173,"results":"23","hashOfConfig":"18"},{"size":745,"mtime":1610525290095,"results":"24","hashOfConfig":"18"},{"size":378,"mtime":1610445229683,"results":"25","hashOfConfig":"18"},{"size":2361,"mtime":1610580387294,"results":"26","hashOfConfig":"18"},{"size":11866,"mtime":1610578520038,"results":"27","hashOfConfig":"18"},{"size":328,"mtime":1610467852798,"results":"28","hashOfConfig":"18"},{"size":3366,"mtime":1610579757635,"results":"29","hashOfConfig":"18"},{"size":415,"mtime":1610525356438,"results":"30","hashOfConfig":"18"},{"size":3336,"mtime":1610579622635,"results":"31","hashOfConfig":"18"},{"size":374,"mtime":1610525337261,"results":"32","hashOfConfig":"18"},{"size":379,"mtime":1610455897276,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"hhmysg",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wakidurrahman/react-quiz-app/src/index.js",[],["68","69"],"/Users/wakidurrahman/react-quiz-app/src/App.js",[],"/Users/wakidurrahman/react-quiz-app/src/reportWebVitals.js",[],"/Users/wakidurrahman/react-quiz-app/src/pages/Questions.jsx",[],"/Users/wakidurrahman/react-quiz-app/src/pages/Answers.jsx",[],"/Users/wakidurrahman/react-quiz-app/src/components/Routes/PrivateAdminUserRoute.jsx",[],"/Users/wakidurrahman/react-quiz-app/src/components/Routes/PrivateUserRoute.jsx",[],"/Users/wakidurrahman/react-quiz-app/src/components/Spinner/Spinner.jsx",[],"/Users/wakidurrahman/react-quiz-app/src/pages/LogIn.jsx",["70"],"/Users/wakidurrahman/react-quiz-app/src/pages/Quiz.jsx",["71","72"],"import React, { useState, useEffect } from 'react';\nimport Layout from '../components/Layouts/Layout';\nimport AlertMessage from '../components/Message/AlertMessage';\n\nimport { qBank } from '../utilities/dataStore';\nimport {\n  getItemFromLocalStorage,\n  setItemToLocalStorage,\n} from '../utilities/localStorage';\n\nconst Quiz = () => {\n  const [userInfo, setUserInfo] = useState({});\n  const [questionBank, setQuestionBank] = useState(qBank);\n  const [particularQuizUpdate, setParticularQuizUpdate] = useState({});\n  const [particularQuiz, setParticularQuiz] = useState({\n    question: '',\n    answer1: '',\n    answer2: '',\n    answer3: '',\n    answer4: '',\n    correct: '',\n  });\n  const [successMessage, setSuccessMessage] = useState();\n\n  useEffect(() => {\n    const user = getItemFromLocalStorage('authUserInfo')\n      ? getItemFromLocalStorage('authUserInfo')\n      : {};\n    setUserInfo(user);\n  }, []);\n\n  const updateHandler = (item) => {\n    setParticularQuizUpdate(item);\n  };\n\n  const deleteHandler = (item) => {};\n\n  const onChangeInputHandler = ({ target }) => {\n    setParticularQuiz({\n      ...particularQuiz,\n      [target.name]: target.value,\n    });\n  };\n  const addQuizSubmitHandler = (e) => {\n    e.preventDefault();\n    const eachQuiz = {\n      question: '',\n      answers: [],\n      correct: '',\n      questionId: Math.floor(Math.random() * 9999 + 1),\n    };\n    // sort Object\n    const ordered = Object.keys(particularQuiz)\n      .sort()\n      .reduce((obj, key) => {\n        obj[key] = particularQuiz[key];\n        return obj;\n      }, {});\n    // set object\n    if (Object.values(ordered).length > 0) {\n      for (const key in ordered) {\n        if (Object.hasOwnProperty.call(ordered, key)) {\n          if (\n            key === 'answer1' ||\n            key === 'answer2' ||\n            key === 'answer3' ||\n            key === 'answer4'\n          ) {\n            eachQuiz.answers.push(ordered[key]);\n          }\n          if (key === 'question') eachQuiz.question = ordered[key];\n          if (key === 'correct') eachQuiz.correct = ordered[key];\n        }\n      }\n    }\n    setItemToLocalStorage('tempQuiz', [...questionBank, eachQuiz]);\n    setParticularQuiz({\n      question: '',\n      answer1: '',\n      answer2: '',\n      answer3: '',\n      answer4: '',\n      correct: '',\n    });\n    setQuestionBank([...questionBank, eachQuiz]);\n    setSuccessMessage('Quiz add successful!');\n  };\n\n  const resetMessage = () => {\n    setSuccessMessage('');\n  };\n\n  const updateQuizSubmitHandler = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <Layout>\n      <div className='row'>\n        <div className=' d-flex justify-content-between mb-3'>\n          <h5> Quiz </h5>\n          <button\n            className='btn btn-primary'\n            data-bs-toggle='modal'\n            data-bs-target='#addQuizModal'\n          >\n            Add Quiz\n          </button>\n        </div>\n        <div className='table-responsive'>\n          <table className='table table-striped align-middle table-hover'>\n            <thead>\n              <tr>\n                <th scope='col'>QuestionId</th>\n                <th scope='col'>Question</th>\n                <th scope='col'>Answers</th>\n                <th scope='col'>Correct</th>\n                <th scope='col'>Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {questionBank && questionBank.length > 0 ? (\n                questionBank.map((item, i) => (\n                  <tr kay={item.questionId}>\n                    <td>{item.questionId}</td>\n                    <td>{item.question}</td>\n                    <td>\n                      {item.answers.map((ans) => (\n                        <>{ans}</>\n                      ))}\n                    </td>\n                    <td>{item.correct}</td>\n                    <td>\n                      <button\n                        data-bs-toggle='modal'\n                        data-bs-target='#updateModal'\n                        onClick={() => updateHandler(item)}\n                        className='btn text-warning'\n                      >\n                        <i className='bi bi-pencil-square'></i>\n                      </button>\n                      <button\n                        onClick={() => deleteHandler(item)}\n                        className='btn text-danger'\n                      >\n                        <i className='bi bi-trash-fill'></i>\n                      </button>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan='6'>Data not found </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      {/* Modal  */}\n      <div\n        className='modal fade'\n        id='addQuizModal'\n        tabIndex='-1'\n        aria-labelledby='addQuizModalLabel'\n        aria-hidden='true'\n      >\n        <div className='modal-dialog modal-dialog-centered modal-dialog-scrollable'>\n          <div className='modal-content'>\n            <form onSubmit={addQuizSubmitHandler}>\n              <div className='modal-header'>\n                <h5 className='modal-title' id='addQuizModalLabel'>\n                  Quiz\n                </h5>\n                <button\n                  type='button'\n                  className='btn-close'\n                  data-bs-dismiss='modal'\n                  aria-label='Close'\n                  onClick={resetMessage}\n                ></button>\n              </div>\n              <div className='modal-body'>\n                {successMessage && successMessage ? (\n                  <AlertMessage\n                    message={successMessage}\n                    alertClassType='alert-success'\n                  />\n                ) : null}\n                <div className='mb-3'>\n                  <label htmlFor='question' className='form-label'>\n                    Question\n                  </label>\n                  <input\n                    type='text'\n                    className='form-control'\n                    id='question'\n                    name='question'\n                    placeholder='Question'\n                    value={particularQuiz.question}\n                    onChange={onChangeInputHandler}\n                    required\n                  />\n                </div>\n                <div className='mb-3 row'>\n                  <div className='col'>\n                    <label htmlFor='question' className='form-label'>\n                      Answer 1\n                    </label>\n                    <input\n                      type='text'\n                      className='form-control'\n                      id='answer2'\n                      name='answer1'\n                      placeholder='Answer 1'\n                      value={particularQuiz.answer1}\n                      onChange={onChangeInputHandler}\n                      required\n                    />\n                  </div>\n                  <div className='col'>\n                    <label htmlFor='question' className='form-label'>\n                      Answer 2\n                    </label>\n                    <input\n                      type='text'\n                      className='form-control'\n                      id='answer2'\n                      name='answer2'\n                      placeholder='Answer 2'\n                      value={particularQuiz.answer2}\n                      onChange={onChangeInputHandler}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className='mb-3 row'>\n                  <div className='col'>\n                    <label htmlFor='question' className='form-label'>\n                      Answer 3\n                    </label>\n                    <input\n                      type='text'\n                      className='form-control'\n                      id='answer3'\n                      name='answer3'\n                      placeholder='Answer 3'\n                      value={particularQuiz.answer3}\n                      onChange={onChangeInputHandler}\n                      required\n                    />\n                  </div>\n                  <div className='col'>\n                    <label htmlFor='question' className='form-label'>\n                      Answer 4\n                    </label>\n                    <input\n                      type='text'\n                      className='form-control'\n                      id='answer4'\n                      name='answer4'\n                      placeholder='Answer4'\n                      value={particularQuiz.answer4}\n                      onChange={onChangeInputHandler}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className='mb-3'>\n                  <label htmlFor='correct' className='form-label'>\n                    Correct\n                  </label>\n                  <input\n                    type='text'\n                    className='form-control'\n                    id='correct'\n                    name='correct'\n                    placeholder='Correct'\n                    value={particularQuiz.correct}\n                    onChange={onChangeInputHandler}\n                    required\n                  />\n                </div>\n              </div>\n              <div className='modal-footer'>\n                <button\n                  type='button'\n                  className='btn btn-secondary'\n                  data-bs-dismiss='modal'\n                >\n                  Close\n                </button>\n                <button type='submit' className='btn btn-primary'>\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n      {/* Update Modal  */}\n      <div\n        className='modal fade'\n        id='updateModal'\n        tabIndex='-1'\n        aria-labelledby='updateModalLabel'\n        aria-hidden='true'\n      >\n        <div className='modal-dialog modal-dialog-centered modal-dialog-scrollable'>\n          <div className='modal-content'>\n            <div className='modal-header'>\n              <h5 className='modal-title' id='updateModalLabel'>\n                Quiz update\n              </h5>\n              <button\n                type='button'\n                className='btn-close'\n                data-bs-dismiss='modal'\n                aria-label='Close'\n              ></button>\n            </div>\n            <div className='modal-body'>\n              {particularQuizUpdate && particularQuizUpdate ? (\n                <div className='card'>\n                  <div className='card-body'>\n                    <h5 className='card-title'>Question: {particularQuizUpdate.question}</h5>\n                    <h6 className=\"card-subtitle mb-2 text-muted\">Question Id: {particularQuizUpdate.questionId}</h6>\n                    <p className='card-text text-success'>Correct: {particularQuizUpdate.correct}</p>\n                  </div>\n                  <ul className='list-group list-group-flush'>\n                    {particularQuizUpdate.answers && particularQuizUpdate.answers.map((ans, i) => (\n                      <li key={i+1} className='list-group-item'>Answer {i} : {ans}</li>\n                    ))}\n                  </ul>\n                </div>\n              ) : null}\n            </div>\n            <div className='modal-footer'>\n              <button\n                type='button'\n                className='btn btn-secondary'\n                data-bs-dismiss='modal'\n              >\n                Close\n              </button>\n              <button type='button' className='btn btn-primary'>\n                Save changes\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Quiz;\n","/Users/wakidurrahman/react-quiz-app/src/components/Layouts/Layout.jsx",[],"/Users/wakidurrahman/react-quiz-app/src/components/Layouts/Header.jsx",[],"/Users/wakidurrahman/react-quiz-app/src/utilities/userAction.js",[],"/Users/wakidurrahman/react-quiz-app/src/utilities/dataStore.js",[],"/Users/wakidurrahman/react-quiz-app/src/utilities/localStorage.js",[],"/Users/wakidurrahman/react-quiz-app/src/components/Message/AlertMessage.jsx",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":17},{"ruleId":"77","severity":1,"message":"81","line":12,"column":10,"nodeType":"79","messageId":"80","endLine":12,"endColumn":18},{"ruleId":"77","severity":1,"message":"82","line":93,"column":9,"nodeType":"79","messageId":"80","endLine":93,"endColumn":32},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'usersDB' is defined but never used.","Identifier","unusedVar","'userInfo' is assigned a value but never used.","'updateQuizSubmitHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]